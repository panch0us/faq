Поиск повторяющихся файлов (терминальная программа "fdupes"
> sudo apt update
> sudo apt install fdupes
> fdupes -rdN files # 
	-r рекурсивно, 
	-d предложение на удаление, 
	-N согласие на удаление файлов и сохранение единственного экземпляра, вместо повторяющихся
	- files - путь к нужному каталогу


--------------------- РЕЗЕРВНОЕ КОПИРОВАНИЕ -----------------
1. lsblk (смотрим диски системы)

2. dd if=/dev/mmcblk0 [путь к каталогу который копируем] bs=1M | gzip > /path/to/backup.gz [путь в какой файл сохраянем]

СОХРАНЕНИЕ КОПИИ В WINDOWS:
1. Устаналиваем putty
2. Через CMD выполняем:
	pscp -P 333 (указавыем порт, если он отличается от 22) pi@192.168.55.199:/home/pi/[имя файла для сохранения] C:\Users\panchous\Desktop\home\[имя файла для сохранения]

--------------------- ОБНОВЛЕНИЕ -----------------
https://weril.me/obnovlenie-prilozhenij-i-os/
> sudo apt-get update
получение списка всех доступных обновлений приложений из установленных в системе репозиториев. 
Обязательно запускаем чтобы гарантировать, что мы ставим последние версии приложений.
> sudo apt-get dist-upgrade
обновление приложений на основе сформированного ранее списка обновлений. dist-upgrade лучше обычного upgrade (sudo apt-get upgrade) 
т.к. разрешает конфликты (доустанавливает/обновляет/удаляет необходимые зависимости). Логгирование лучше всего собирать с терминала 
(secure/putty легко это позволяют), а не записывать в файл (&>upgrade.log) – потому что могут появляться экраны с запросами, не только 
y/n, решаемые опцией -y. После обновления перезагружаемся. Осторожно! при обновлении сервисов они могут не работать (у меня выдавало 
ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)) при обновлении mysql, 
что вполне естественно. Обновление может помочь при переводе часов (обновлялся пакет tzdata, отвечающий за часовые пояса).
После перезагрузки не забываем стартануть все демоны, а так же можем наткнуться на отсутствие сетевой доступности из-за прописывания 
маршрутов динамически в RIB, а не в файл. Проверяем вышестоящими командами отсутствия новых апдейтов.
> sudo apt-get autoremove
удаление осиротевших пакетов/библиотек и прочего треша, запускаем строго ПОСЛЕ обновления и перезагрузки. 
Запускать надо т.к. может сильно высвободить память от мусора. Причем запускать несколько раз, как с CCleaner. 
После этого может понадобится еще одна перезагрузка (в шапке будет system restart required).

--------------------- АВТОЗАГРУЗКА СКРИПТА -----------------
https://ru.stackoverflow.com/questions/1167196/%D0%90%D0%B2%D1%82%D0%BE%D0%B7%D0%B0%D0%B3%D1%80%D1%83%D0%B7%D0%BA%D0%B0-py-%D1%81%D0%BA%D1%80%D0%B8%D0%BF%D1%82%D0%B0-%D0%BD%D0%B0-linux
sudo nano /etc/systemd/system/<your_bot_name>.service

Туда копируете вот такой текст заменив текст в <> на ваши параметры:

[Unit]
Description=<YOUR BOT DESCRIPTION>
After=network.target

[Service]
Type=simple
User=<имя пользователя от которого вы запускаете скрипты>
Group=<группа пользователя от которого вы запускаете скрипты>

Environment=PYTHONPATH=</full/path/to/directory/with/your/script> 
WorkingDirectory=</full/path/to/directory/with/your/script>
ExecStart=</full/path/to/python> </full/path/to/your/script>
Restart=always
RestartSec=5

[Install]
WantedBy=network.target

Далее: Ctrl+X, y для сохранения файла юнита который только что создали

Затем

sudo systemctl daemon-reload
sudo systemctl start <your_bot_name>.service
sudo systemctl status <your_bot_name>.service
# если все норм и юнит запустился...
sudo systemctl enable <your_bot_name>.service


--------------------- CENTOS 7 с нуля -----------------
https://serveradmin.ru/centos-nastroyka-servera/
Установка: 
Если интернет образ - то зеркало: mirror.yandex.ru/sentos/7/os/x86_64
1. Добавляем пользователя в группу админов (wheel) для sudo
# usermod -aG wheel username
Перехаходим по пользовталя (exit)
2. Обновляемся
$ sudo yum update
3. Отключить SELinux
$ sudo vim /etc/sysconfig/selinux
	SELINUX=disabled
$ reboot
4. Настройка сети
$ ip addr (нахоим наш сетевой интерфейс)
Если нужен статический ip:
$ sudo vim /etc/sysconfig/network-scripts/ifcfg-{название нашего сет. интерфейса}
	BOOTPROTO 	с dhcp на none
	DNS1 	указали dns сервер
	IPADDR0 	настроили статический ip адрес
	PREFIX0 	указали маску подсети
	GATEWAY0 	настроили шлюз по-умолчанию
$ sudo systemctl restart network
5. Настраиваем firewall
Пропустил настройку.
6. SSH
Работает сразу
7. Добавление репозиториев
$ sudo yum install epel-release
$ sudo rpm -Uhv http://rpms.remirepo.net/enterprise/remi-release-7.rpm

8. Установка Python последней версии (после кучи проблем с несовместимостью sqlite/openssl решил забить и перейти на свежую версию linux =)

$ sudo yum install libsqlite3x-devel.x86_64 (точное название можно узнать yum list | grep sqlite libsqlite3)
$ ./configure -C --with-openssl=/usr/local/{имя дирректори openssl} --with-openssl-rpath=auto --enable-loadable-sqlite-extensions --prefix=/usr/local/python-3.x.x
$ make -j8
$ sudo make altinstall
https://docs.python.org/3/using/unix.html
https://docs.python.org/3/using/configure.html#configure-options

p.s. НЕ ИСПОЛЬЗОВАТЬ --enable-optimizations, т.к. если gcc ниже 8.1.0 , а только с этой весрии пофикшена проблема с этой камндой...

После установки была проблема с openssl: libssl.so.1.1 connot open..
Решилось:
$ sudo cp /usr/local/openssl-1.1.1m/lib/libcrypto.so.1.1 /usr/lib64
$ sudo cp /usr/local/openssl-1.1.1m/lib/libssl.so.1.1 /usr/lib64

(дополинтельные возможности для установки openssl https://cloudwafer.com/blog/installing-openssl-on-centos-7/)

Возможно перед первым способом нужно будет:
https://infoit.com.ua/linux/ustanovka-python-3-9-na-centos-8-centos-7/
$ sudo yum groupinstall "Development Tools" -y (возможно вместо Dev... Tools вписать русское название, если язык ОС русский?)
$ sudo yum install openssl-devel libffi-devel bzip2-devel -y

--------------------- DEBIAN 11 с нуля -----------------
1. Установка SSH:
https://losst.ru/nastrojka-ssh-v-debian
2. Установка Python последней версии:
https://docs.python.org/3/using/unix.html, https://infoit.com.ua/linux/kak-ustanovit-python-3-10-na-debian-11-debian-10/
$ sudo apt update
$ sudo apt upgrade
$ sudo apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev libsqlite3-dev wget libbz2-dev
$ wget https://www.python.org/ftp/python/{посл.версия}
$ tar -xf Python...
$ cd Py..
$ ./configure --prefix=/usr/local/python-3.x.x --enable-optimizations

3. Установка postgresql
https://www.postgresql.org/download/linux/debian/

$ sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
$ wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
$ sudo apt update
$ sudo apt search postgresql-№версии
$ sudo apt install postgresql-№версии

Управление СУБД:
https://www.osradar.com/install-postgresql-debian-server/
$ sudo systemctl status postgresql
Использование СУБД:
$ sudo -i -u postgres
$ psql
